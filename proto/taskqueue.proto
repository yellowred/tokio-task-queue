syntax = "proto3";
package taskqueue.v1;

service TaskQueue {
	rpc publish (Task) returns (TaskQueueResult) {}
	rpc list (FilterParams) returns (TaskList) {}
}

message Task {
	enum State {
		STATE_NEW = 0;
		STATE_PROCESSING = 1;
		STATE_INPROGRESS = 2;
		STATE_FAILED = 3;
		STATE_SUCCESS = 4;
		STATE_DIED = 5;
	}

	enum Priority {
		PRIORITY_LOW = 0;
		PRIORITY_MEDIUM = 1;
		PRIORITY_HIGH = 2;
	}

	string name = 1;
  
	string correlation_id = 2;

	string stream = 3;

	string uuid = 4;

	State state = 5;

	Priority priority = 6;

	int64 timestamp = 7;
	
	int64 updated_at = 8;

    map<string, string> parameters = 9;
}

message TaskQueueResult {
	enum Status {
		STATUS_OK = 0;
		STATUS_FAIL = 1;
	}
	string resultID = 1;
	Status status = 2;
}

message FilterParams {
	Task.State status = 1;
	int64 published_from = 2;
}

message TaskList {
	repeated Task tasks = 1;
}

message TaskID {
	uint64 id = 1;
}
